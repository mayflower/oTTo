---
openapi: 3.0.3
info:
  title: "otto-api"
  description: "otto rest api"
  version: 0.0.1

components:
  schemas:
    empty:
      title: "Empty"
      description: "empty data transfer object"
      type: object
      readOnly: true
    error:
      title: "Error"
      description: "error data transfer object"
      type: object
      required:
        - message
        - code
      properties:
        message:
          title: "Message"
          description: "error message/reason"
          type: string
          readOnly: true
          nullable: false
          example: "error happened due to xyz"
        code:
          title: "Code"
          description: "error code, can be used for error handling"
          type: string
          readOnly: true
          nullable: false
          example: "ERR01"
        resolution:
          title: "Resolution"
          description: "possible resolution"
          type: string
          readOnly: true
          nullable: false
          example: "this could be done in order to resolve the error"
    event:
      title: "Event"
      description: "event data transfer object"
      type: object
      required:
        - id
        - name
        - description
        - location
        - details
        - url
        - start
        - end
        - days
        - timeslotSizes
        - sessions
      properties:
        id:
          title: "ID"
          description: "generated unique identifier"
          type: number
          readOnly: true
          nullable: false
          example: 1
        name:
          title: "Name"
          description: "name of the event"
          type: string
          nullable: false
          maxLength: 128
          example: "JSConf Berlin"
        description:
          title: "Description"
          description: "brief event-description"
          type: string
          maxLength: 256
          example: "Yearly event for JavaScript in Germany"
        location:
          title: "Location"
          description: "location of the event"
          type: string
          nullable: false
          maxLength: 128
          example: "Messe-Berlin"
        details:
          title: "Details"
          description: "details about this event"
          type: string
          nullable: false
          example: "..."
        image:
          title: "Image"
          description: "link to the image of this event"
          type: string
          nullable: true
          format: uri
          example: "https://www.example.com/assets/example.jpeg"
        url:
          title: "URL"
          description: "link to the official website of this event"
          type: string
          nullable: false
          format: uri
          example: "https://www.example.com/"
        start:
          title: "Start"
          description: "start timestamp of the event"
          type: integer
          nullable: false
          example: 1679107234
        end:
          title: "End"
          description: "end timestamp of the event"
          type: integer
          nullable: false
          example: 1679108234
        style:
          title: "Style"
          description: "style properties of the event"
          $ref: '#/components/schemas/style'
          nullable: true
        days:
          title: "Days"
          description: "list of days of the event"
          type: array
          items:
            $ref: '#/components/schemas/day'
          nullable: false
        timeslotSizes:
          title: "Timeslot sizes"
          description: "list of timeslot sizes of the event"
          type: array
          items:
            $ref: '#/components/schemas/timeslotSize'
          nullable: false
        sessions:
          title: "Sessions"
          description: "list of sessions within room"
          type: array
          items:
            $ref: '#/components/schemas/session'
          nullable: false
        sponsors:
          title: "Sponsors"
          description: "list of sponsors of the event"
          type: array
          items:
            $ref: '#/components/schemas/sponsor'
          nullable: true
    style:
      title: "Style"
      description: "style properties of an event"
      type: object
      required:
        - id
        - name
        - description
        - color
        - textColor
        - events
      properties:
        id:
          title: "ID"
          description: "generated unique identifier"
          type: number
          readOnly: true
          nullable: false
          example: 1
        name:
          title: "Name"
          description: "name of the style"
          type: string
          nullable: false
          maxLength: 128
          example: "..."
        description:
          title: "Description"
          description: "Description of the Style"
          type: string
          maxLength: 256
          example: "Yearly event for JavaScript in Germany"
        color:
          title: "Color"
          description: "Hex Color of the style"
          type: string
          nullable: false
          maxLength: 128
          example: "#AF1234"
        textColor:
          title: "Text color"
          description: "Text color of the style"
          type: string
          nullable: false
          maxLength: 128
          example: "#AF1234"
        events:
          title: "Events"
          description: "list of the events this style is used"
          type: array
          nullable: false
          items:
            type: number
        image:
          title: "Image"
          description: "link to the image of this style"
          type: string
          nullable: true
          format: uri
          example: "https://www.example.com/assets/example.jpeg"
    sponsor:
      title: "Sponsor"
      description: "sponsor for an event"
      type: object
      required:
        - id
        - name
        - url
      properties:
        id:
          title: "ID"
          description: "generated unique identifier"
          type: number
          readOnly: true
          nullable: false
          example: 1
        name:
          title: "Name"
          description: "name of the sponsor"
          type: string
          nullable: false
          maxLength: 128
          example: "..."
        image:
          title: "Image"
          description: "link to the image of this sponsor"
          type: string
          nullable: true
          format: uri
          example: "https://www.example.com/assets/example.jpeg"
        url:
          title: "URL"
          description: "link to the official website of this sponsor"
          type: string
          nullable: false
          format: uri
          example: "https://www.example.com/"
    day:
      title: "Day"
      description: "Day of the event"
      type: object
      required:
        - id
        - date
        - rooms
      properties:
        id:
          title: "ID"
          description: "generated unique identifier"
          type: number
          readOnly: true
          nullable: false
          example: 1
        date:
          title: "Date"
          description: "date of the Day"
          type: string
          format: date
          nullable: false
          maxLength: 128
          example: "2023-12-24"
        note:
          title: "Note"
          description: "note for special days"
          type: string
          nullable: true
          example: "this is a special day"
        rooms:
          title: "Rooms"
          description: "list of rooms for this day"
          type: array
          items:
            $ref: '#/components/schemas/room'
          nullable: false
    room:
      title: "Room"
      description: "room data transfer object"
      type: object
      required:
        - id
        - name
        - timeslots
      properties:
        id:
          title: "ID"
          description: "generated unique identifier"
          type: string
          readOnly: true
          nullable: false
          example: 1
        name:
          title: "Name"
          description: "name of the room"
          type: string
          nullable: false
          example: "Nice Room"
        timeslots:
          title: "Timeslots"
          description: "list of timeslots for this event"
          type: array
          items:
            $ref: '#/components/schemas/timeslot'
          nullable: false
    session:
      title: "Session"
      description: "session data transfer object"
      type: object
      required:
        - id
        - roomId
        - title
        - speaker
        - timeslot
      properties:
        id:
          title: "ID"
          description: "generated unique identifier"
          type: number
          readOnly: true
          nullable: false
          example: 1
        roomId:
          title: "RoomID"
          description: "reference to the room"
          type: number
          readOnly: true
          nullable: false
          example: 1
        title:
          title: "Title"
          description: "title of the session"
          type: string
          nullable: false
          maxLength: 128
          example: "Kubernetes for Beginner#1"
        description:
          title: "Description"
          description: "brief session-description"
          type: string
          maxLength: 256
          example: "This is a Kubernetes Session for Beginners. Only for Entry Levels."
        timeslot:
          title: "Timeslot"
          description: "timeslot of the session"
          type: string
          nullable: false
          example: "long timeslot"
        speaker:
          title: "Speaker"
          description: "speaker of the session"
          type: string
          nullable: false
          example: "Max Mustermann"
    timeslot:
      title: "Timeslot"
      description: "timeslot data transfer object"
      type: object
      required:
        - id
        - size
        - startDate
        - endDate
        - roomId
      properties:
        id:
          title: "ID"
          description: "generated unique identifier"
          type: number
          readOnly: true
          nullable: false
          example: 1
        roomId:
          title: "RoomID"
          description: "reference to the room"
          type: number
          readOnly: true
          nullable: false
          example: 1
        size:
          title: "Size"
          description: "size of the session"
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/timeslotSize'
        startDate:
          title: "StartDate"
          description: "startDate of the timeslot"
          type: string
          format: date
          nullable: false
          maxLength: 128
          example: "2023-12-24"
        endDate:
          title: "EndDate"
          description: "endDate of the timeslot"
          type: string
          format: date
          nullable: false
          maxLength: 128
          example: "2023-12-26"
        isBlocking:
          title: "isBlocking"
          description: "Session don't allow parallel sessions"
          type: bool
          nullable: false
        isBreak:
          title: "isBreak"
          description: "this session is for all rooms, like lunch breaks"
          type: bool
          nullable: false
    timeslotSize:
      title: "TimeslotSize"
      description: "timeslotSize data transfer object"
      type: object
      required:
        - id
        - size
        - name
        - timeslots
      properties:
        id:
          title: "ID"
          description: "generated unique identifier"
          type: number
          readOnly: true
          nullable: false
          example: 1
        size:
          title: "Size"
          description: "size of the session"
          type: number
          nullable: false
        timeslots:
          title: "Timeslots"
          description: "timeslots with this size"
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/timeslot'
paths:
  /rooms:
    get:
      operationId: getRooms
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '200':
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/room'
    post:
      operationId: createRoom
      requestBody:
        description: room to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/room'
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '201':
          description: Successfully created response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/room'

  /rooms/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getRoomById
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/room'
    put:
      operationId: changeRoomById
      requestBody:
        description: room to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/room'
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '201':
          description: Successfully updated
    delete:
      operationId: deleteRoomById
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '204':
          description: Successfully deleted

  /sessions:
    get:
      operationId: getSessions
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '200':
          description: list of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/session'
    post:
      operationId: createSession
      requestBody:
        description: session to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session'
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '201':
          description: Successfully created response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
  /sessions/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getSessionById
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
    put:
      operationId: updateSessionById
      requestBody:
        description: session to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session'
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '201':
          description: Successfully updated
    delete:
      operationId: deleteSessionById
      responses:
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '204':
          description: Successfully deleted